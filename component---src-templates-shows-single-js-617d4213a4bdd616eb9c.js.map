{"version":3,"sources":["webpack:///./src/components/show.js","webpack:///./src/templates/shows/single.js"],"names":["Range","start","end","value","Shift","day","ShowImageSquare","show","bannerImageUrl","css","lightGrey","ShiftSummary","airshifts","length","first","reduce","accumulation","item","days","map","airshift","sort","ordinal","0","1","2","3","4","5","6","range","index","Fragment","key","data","page","markdownRemark","Show","factory","title","gap","splits","program","to","slug","websiteUrl","archives","archive","html","query"],"mappings":"4FAAA,iIASO,MAAMA,EAAQ,EAAGC,QAAOC,SACtB,wBAAM,YAAC,IAAD,CAAMC,MAAOF,IAAU,MAAM,YAAC,IAAD,CAAME,MAAOD,KAG5CE,EAAQ,EAAGD,WACf,wBAAOA,EAAME,IAAb,KAAmB,YAACL,EAAD,CAAOC,MAAOE,EAAMF,MAAOC,IAAKC,EAAMD,O,kTAG3D,MAAMI,EAAkB,EAAGC,WAChC,MAAM,eAAEC,GAAmBD,EAE3B,OAAO,mBACLE,IAAKA,YAAF,oCAEmBC,IAFnB,sCAQDF,EACE,mBACAC,IAAKA,YAAF,wDAGwBD,EAHxB,6FAUH,mBACAC,IAAG,GAMD,mBAAKA,IAAG,OAkBLE,EAAe,EAAGC,gBAC7B,GAAyB,IAArBA,EAAUC,OACZ,OAAO,YAACT,EAAD,CAAOD,MAAOS,EAAU,KAGjC,MAAME,EAAQF,EAAU,GAIxB,GAHiBA,EAAUG,OAAO,CAACC,EAAcC,IACxCD,GAAgBC,EAAKhB,QAAUa,EAAMb,OAASgB,EAAKf,MAAQY,EAAMZ,KACvE,GACW,CACZ,MAAMgB,EAAON,EAAUO,IAAKC,GAAaA,EAASf,KAAKc,IAAKd,IACnD,CACL,OAAU,EACV,OAAU,EACV,QAAW,EACX,UAAa,EACb,SAAY,EACZ,OAAU,EACV,SAAY,IACZA,IACDgB,OAAOF,IAAKG,IACN,CACLC,EAAG,SACHC,EAAG,SACHC,EAAG,UACHC,EAAG,YACHC,EAAG,WACHC,EAAG,SACHC,EAAG,aACHP,IAEJ,IAAIQ,EAAS,GAAEZ,EAAK,QAAQA,EAAKA,EAAKL,OAAS,KAI/C,MAHc,oBAAViB,IACFA,EAAQ,YAEH,wBAAOA,EAAP,IAAc,YAAC9B,EAAD,CAAOC,MAAOa,EAAMb,MAAOC,IAAKY,EAAMZ,OAG7D,OACE,wBACGU,EAAUO,IAAI,CAACC,EAAUW,IAEtB,YAAC,IAAMC,SAAP,CAAgBC,IAAKF,GAClBA,EAAQ,GAAK,KACd,YAAC3B,EAAD,CAAOD,MAAOiB,S,kCC9G1B,mIAWe,YAAGc,WAChB,MAAMC,EAAOD,EAAKE,eACZ7B,EAAO8B,IAAKC,QAAQH,GAE1B,OACE,YAAC,IAAD,CAAQI,MAAOhC,EAAKgC,OAClB,YAAC,IAAD,KACE,YAAC,IAAD,CAAQC,IAAK,EAAGC,OAAQ,CAAC,EAAG,IAC1B,uBACE,YAAC,IAAD,KACE,uBACE,sBAAKlC,EAAKgC,QAEZ,uBACE,gCACA,uBAAK,YAAC,IAAD,CAAc3B,UAAWL,EAAKK,cAEpCL,EAAKmC,SAAY,uBAChB,iCACA,uBAAK,YAAC,IAAD,CAAMC,GAAIpC,EAAKmC,QAAQE,MAAOrC,EAAKmC,QAAQH,SAEjDhC,EAAKsC,YAAe,uBACnB,+BACA,uBAAK,YAAC,IAAD,CAAcF,GAAIpC,EAAKsC,YAAvB,aAENtC,EAAKuC,SAASjC,OAAS,GAAM,uBAC5B,kCACA,sBACGN,EAAKuC,SAAS3B,IAAI,CAAC4B,EAAShB,IAEzB,kBAAIE,IAAKF,GAAO,YAAC,IAAD,CAAMY,GAAII,EAAQH,MAAOG,EAAQR,aAO7D,uBACE,YAAC,IAAD,CAAiBhC,KAAMA,MAG1B4B,EAAKa,MAAS,YAAC,IAAD,CAAWA,KAAMb,EAAKa,UAMtC,MAAMC,EAAK","file":"component---src-templates-shows-single-js-617d4213a4bdd616eb9c.js","sourcesContent":["import React from 'react'\n\nimport { css } from '@emotion/core'\n\nimport { lightGrey } from '@/components/colors'\n\nimport Time from '@/components/time'\n\n\nexport const Range = ({ start, end }) => {\n  return <span><Time value={start} />{' - '}<Time value={end} /></span>\n}\n\nexport const Shift = ({ value }) => {\n  return <span>{value.day}s <Range start={value.start} end={value.end} /></span>\n}\n\nexport const ShowImageSquare = ({ show }) => {\n  const { bannerImageUrl } = show\n\n  return <div\n    css={css`\n      overflow: hidden;\n      border: 1px solid ${lightGrey};\n      border-radius: 0.25em;\n      width: 100%;\n    `}\n  >\n    {\n      bannerImageUrl ? (\n        <div\n        css={css`\n          padding-bottom: 100%;\n          width: 100%;\n          background-image: url(\"${bannerImageUrl}\");\n          background-repeat: no-repeat;\n          background-position: center center;\n          background-size: cover;\n        `}\n        />\n      ) : (\n        <div\n        css={css`\n          padding-bottom: 100%;\n          width: 100%;\n          position: relative;\n        `}\n        >\n          <div css={css`\n            position: absolute;\n            width: 120%;\n            height: 120%;\n            top: -10%;\n            left: -10%;\n            background-image: url(\"/images/logo-disk.png\");\n            background-size: 40%;\n            transform: rotate(15deg);\n            background-position: center center;\n            opacity: 0.5;\n          `}/>\n        </div>\n      )\n    }\n  </div>\n}\n\nexport const ShiftSummary = ({ airshifts }) => {\n  if (airshifts.length === 1) {\n    return <Shift value={airshifts[0]} />\n  }\n\n  const first = airshifts[0]\n  const sameTime = airshifts.reduce((accumulation, item) => {\n    return accumulation && item.start === first.start && item.end === first.end\n  }, true)\n  if (sameTime) {\n    const days = airshifts.map((airshift) => airshift.day).map((day) => {\n      return {\n        'Sunday': 0,\n        'Monday': 1,\n        'Tuesday': 2,\n        'Wednesday': 3,\n        'Thursday': 4,\n        'Friday': 5,\n        'Saturday': 6,\n      }[day]\n    }).sort().map((ordinal) => {\n      return {\n        0: 'Sunday',\n        1: 'Monday',\n        2: 'Tuesday',\n        3: 'Wednesday',\n        4: 'Thursday',\n        5: 'Friday',\n        6: 'Saturday',\n      }[ordinal]\n    })\n    let range = `${days[0]} - ${days[days.length - 1]}`\n    if (range === 'Monday - Friday') {\n      range = 'Weekdays'\n    }\n    return <span>{range} <Range start={first.start} end={first.end} /></span>\n  }\n\n  return (\n    <span>\n      {airshifts.map((airshift, index) => {\n        return (\n          <React.Fragment key={index}>\n            {index > 0 && ', '}\n            <Shift value={airshift} />\n          </React.Fragment>\n        )\n      })}\n    </span>\n  )\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"@/components/layout.js\"\n\nimport { Stack, ExternalLink, Spread, PlainHtml } from '@/components/parts'\n\nimport { ShiftSummary, ShowImageSquare } from '@/components/show'\n\nimport Show from \"@/models/show.js\"\n\nexport default ({ data }) => {\n  const page = data.markdownRemark\n  const show = Show.factory(page)\n\n  return (\n    <Layout title={show.title}>\n      <Stack>\n        <Spread gap={2} splits={[2, 1]}>\n          <div>\n            <Stack>\n              <div>\n                <h1>{show.title}</h1>\n              </div>\n              <div>\n                <h4>On air</h4>\n                <div><ShiftSummary airshifts={show.airshifts} /></div>\n              </div>\n              {show.program && (<div>\n                <h4>Program</h4>\n                <div><Link to={show.program.slug}>{show.program.title}</Link></div>\n              </div>)}\n              {show.websiteUrl && (<div>\n                <h4>Links</h4>\n                <div><ExternalLink to={show.websiteUrl}>Website</ExternalLink></div>\n              </div>)}\n              {show.archives.length > 0 && (<div>\n                <h4>Archives</h4>\n                <ul>\n                  {show.archives.map((archive, index) => {\n                    return (\n                      <li key={index}><Link to={archive.slug}>{archive.title}</Link></li>\n                    )\n                  })}\n                </ul>\n              </div>)}\n            </Stack>\n          </div>\n          <div>\n            <ShowImageSquare show={show} />\n          </div>\n        </Spread>\n        {page.html && (<PlainHtml html={page.html} />)}\n      </Stack>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        website_url\n        banner_image\n        airshifts {\n          day\n          start\n          duration\n        }\n      }\n      program {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n      }\n      archives {\n        frontmatter {\n          title\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}